unit Model.Item;

uses
  Model.Interfaces;

type
  TModelItem = class(TInterfacedObject, IModelItem)
    private
      FParent : IModelVenda;
      FCodigo : Integer;
    public
      constructor Create(Parent: IModelVenda);
      destructor Destroy; override;
      class function New(Parent: IModelVenda): IModelItem;

      function Codigo(Value: Integer): IModelItem;
      function Vender: IModelItem;
      function &End: IModelVenda;
  end;

implementation

{ TModelItem }

function TModelItem.Codigo(Value: Integer): IModelItem;
begin

end;

function TModelItem.&End: IModelVenda;
begin

end;

constructor TModelItem.Create(Parent: IModelVenda);
begin

end;

destructor TModelItem.Destroy;
begin

  inherited;
end;

class function TModelItem.New(Parent: IModelVenda): IModelItem;
begin

end;

function TModelItem.Vender: IModelItem;
begin

end;

end.
